@model MVC_GMap.Controllers.AllData
@{ 
    ViewBag.Title = "Tôi ở đây!!!"; 
}
<script type="text/javascript" src="http://maps.google.com/maps/api/js?sensor=false"></script>
<style>
    body
    {
        padding: 0;
        margin: 0;
    }
    .large_left
    {
        width: 20%;
    }
    .small_right
    {
        width: 80%;
    }
    .small_left
    {
        width: 2%;
    }
    .large_right
    {
        width: 98%;
    }
    ul
    {
        list-style: none;
    }
    .btnsearchchangcolor a:hover
    {
        color: Red;
    }
</style>
<link rel="stylesheet" href="http://code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.css" />
<script src="../../Scripts/jquery-1.5.1.min.js" type="text/javascript"></script>
<script src="http://code.jquery.com/jquery-1.9.1.js"></script>
<script src="http://code.jquery.com/ui/1.10.3/jquery-ui.js"></script>
<script>
    $(document).ready(function () {
        var x = true;
        $("#thugon").click(function () {
            if (x) {
                $this = $(this).parent();
                $this.removeClass("large_left");
                $this.next().removeClass("small_right");
                $this.addClass("small_left");
                $this.next().addClass("large_right");
                x = false;
            }
            else {
                $this = $(this).parent();
                $this.removeClass("small_left");
                $this.next().removeClass("large_right");
                $this.addClass("large_left");
                $this.next().addClass("small_right");
                x = true;
            }
        });

        $(".chk1").click(function () {
            var node = $(this).val();
            var isChecked = $(this).is(':checked');
            //alert(markers.length);
            $.ajax({
                type: "POST",
                url: '/Home/Index1',
                datatype: "json",
                contentType: "application/json; charset=utf-8",
                data: '{"node":"' + node + '"}',
                success: function (data, status) {
                    if (!isChecked) {
                        clearMarkers1(data);
                    }
                    else {
                        showMarkers1(data);
                    }
                    //alert(data);
                }
            });
        });
        $(".chk2").click(function () {
            var node = $(this).val();
            var isChecked = $(this).is(':checked');
            if (isChecked) {
                showDuAn(node, map);
            }
            else {
                showDuAn(node, null);
            }

        });
        $(".chkkhuvuc").click(function () {
            var valuei = $(this).val();
            var isChecked = $(this).is(':checked');
            var i = parseInt(valuei);
            if (isChecked) {
                khuVuc_marker[i].setMap(map);
                map.setCenter(khuVuc_marker[i].position);
            }
            else {
                khuVuc_marker[i].setMap(null);
            }
        });
        $(".chk_duan_in_khuvuc").click(function () {
            var query = $(this).val();
            $.ajax({
                type: "POST",
                url: '/Home/Index_ToaNha',
                datatype: "json",
                contentType: "application/json; charset=utf-8",
                data: '{"query":"' + query + '"}',
                success: function (i, status) {
                    var index = parseInt(i.toString());
                    var isChecked = $(this).is(':checked');
                    alert(isChecked);
                    if (isChecked) {
                        duAn_ToaNha[index].setMap(map);
                        map.setCenter(duAn_ToaNha[index].position);
                    }
                    else {
                        duAn_ToaNha[i].setMap(null);
                        alert(duAn_ToaNha.length);
                    }
                }
            });
        });
        $("#btnSearch").click(function () {
            var query = $("#txtSearch").val();
            $.ajax({
                type: "POST",
                url: '/Home/Search',
                datatype: "json",
                contentType: "application/json; charset=utf-8",
                data: '{"query":"' + query + '"}',
                success: function (data, status) {
                    var arr = data.split(";#");
                    $("#sresult").html(arr[0]);
                    if (arr.length > 1)
                        showSearchPoint(arr[1]);
                }
            });
        });
        $("#btnTimDuong").click(function () {
            var txtstart = $("#txtTimDuongA").val();
            var txtend = $("#txtTimDuongB").val();
            $.ajax({
                type: "POST",
                url: '/Home/TimDuong',
                datatype: "json",
                contentType: "application/json; charset=utf-8",
                data: '{"query":"' + txtstart + ";#" + txtend + '"}',
                success: function (data, status) {

                    if (data != null && data != "") {
                        var arr = data.split(";#");
                        //alert(arr[0] + ";" + arr[1]);
                        calcRoute(arr[0], arr[1]);
                    }
                    else alert('Position not found!');
                }
            });
        });
        $(".chk3").click(function () {
            var node = $(this).val();
            //alert(latlang);
            $.ajax({
                type: "POST",
                url: '/Home/Index2',
                datatype: "json",
                contentType: "application/json; charset=utf-8",
                data: '{"node":"' + latlang + '"}',
                success: function (data, status) {
                    alert(data);
                }
            });
            latlang = [];
        });
    });
</script>
<div class="large_left" style="height: 100%; float: left; position: relative;">
    <br />
    <div style="font-weight: bold">
        TÌM ĐỊA ĐIỂM</div>
    <div class="btnsearchchangcolor">
        <input type="text" id="txtSearch" /><a href="javascript:void(0)" id="btnSearch" style="position: absolute;">
            Tìm kiếm</a>
    </div>
    <div id="sresult">
    </div>
    <br />
    <li><b>CÁC KHU VỰC</b>
        <ul>
            @{
                int i = 0;
                foreach (var item in Model.LstKhuVuc)
                {
                <li>
                    <input type="checkbox" class="chkkhuvuc" value="@i" />@Html.Raw(item.Title)
                    <ul>
                        @foreach (var duan in item.DuAn)
                        {
                            <input type="checkbox" class="chk_duan_in_khuvuc" value=@duan.ID />@Html.Raw(duan.TenDuAn)
                        }
                    </ul>
                </li>
                        i++;
                }
            }
        </ul>
    </li>
    <li><b>LỚP BẢN ĐỒ</b>
        <ul>
            CÁC DỰ ÁN
            <li>
                <input type="checkbox" class="chk2" value="VUNG_BIEN" />Vùng biên dự án</li>
            <li>
                <input type="checkbox" class="chk2" value="TOA_NHA" />Tòa nhà dự án</li>
            @*<li>
                <input type="checkbox" class="chk2" value="TEN" />Tên dự án</li>*@
        </ul>
        @{
            <ul>
                CÁC TIỆN ÍCH
                @{
                    foreach (string item in ViewBag.UK1.Split(new string[] { "__" }, StringSplitOptions.RemoveEmptyEntries))
                    {
                        string[] ar = item.Split(new string[] { ";#" }, StringSplitOptions.RemoveEmptyEntries);
                    <li>
                        <input type="checkbox" class="chk1" value="@ar[0]" />@ar[1]
                    </li>
                    }
                }
            </ul> 
        }
    </li>
    <br />
    <br />
    <br />
    <div style="font-weight: bold">
        TÌM ĐƯỜNG ĐI</div>
    <div>
        Từ
        <input type="text" id="txtTimDuongA" />
    </div>
    <div>
        Đến
        <input type="text" id="txtTimDuongB" />
    </div>
    <div>
        <input type="button" id="btnTimDuong" style="position: absolute; margin-left: 12px;"
            value="Tìm đường" />
    </div>
    <br />
    <br />
    <div id="TimDuongResult" style="margin: 20px; background-color: #FFEE77;">
    </div>
    <div id="totalkm" style="color: Red; margin: 20px; font-size: 1.2em;">
    </div>
    <br />
    <br />
    <a href="javascript:void(0)" class="chk3" style="text-decoration: none; position: absolute;">
        Get point</a><a href="javascript:void(0)" id="thugon" style="text-decoration: none;
            position: absolute; top: 0; right: -1;"><<</a>
</div>
<div id="map-canvas" class="small_right" style="height: 100%;">
</div>
<script src="../../Scripts/DuAn.js" type="text/javascript"></script>
<script type="text/javascript">
    var map;
    var latlang="";
    var markers = [];
    var markerSearch = [];
    var duAn_VungBien = [];
    var duAn_ToaNha = [];
    var duAn_Ten = [];
    var duAn_Info = [];
    var khuVuc_marker = [];
    var availableTags = [];
    var directionsDisplay;
    var rendererOptions = {
        draggable: true
    };

    @{foreach (var item in Model.LstKhuVuc)
      {
        @: var xx='@item.Location';
       @: var sdouble = xx.split(", ");
         @:  var po = new google.maps.LatLng(parseFloat(sdouble[0]), parseFloat(sdouble[1]));
        @: var marker1 = new google.maps.Marker({position: po, map: map, title: '@Html.Raw(item.Title)'});
        @: khuVuc_marker.push(marker1);
      }
      foreach (var item in Model.MarKer)
      {
          @: addMarker1(new google.maps.LatLng(@item.Position), '@Url.Content(item.ImgUrl)', '@Html.Raw(item.Title)');
          @: availableTags.push('@Html.Raw(item.Title)');
      }
      int ii = 0;
      foreach (var item in Model.DataDuAn)
      {
        
        @: availableTags.push('@Html.Raw(item.TenDuAn)');
        @: addMarker2(duAn_ToaNha, new google.maps.LatLng(@item.ToaDo), '@Url.Content(item.AnhIcon)', '@item.TenDuAn', @ii);
        @: duAn_VungBien.push('@item.VungBien');
        @: duAn_Info.push("<b>Thông tin dự án</b><br /><input type='image' src="+'@Url.Content(item.AnhDaiDien)'+" /><br />Tên dự án: " + '@item.TenDuAn' + "<br />Giá thuê: " + '@item.GiaThue' + "<br />Trạng thái: " + '@item.TrangThai');
                //@: alert('@item.VungBien');
          //@: alert(duAn_VungBien.length);
          ii++;
      }
      @: buildVungBien();
    }
    var image = 'Content/images/icon-congdan.png';
    function initialize() {
        var mapOptions = {
            zoom: @ViewBag.Zoom,
            center: new google.maps.LatLng(@ViewBag.Point),
            mapTypeId: google.maps.MapTypeId.@Html.Raw(ViewBag.MapType)
        };
        map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
        directionsDisplay = new google.maps.DirectionsRenderer(rendererOptions);
        google.maps.event.addListener(map, 'click', function(event) {
        addMarker(event.latLng);   
        });     
        google.maps.event.addListener(directionsDisplay, 'directions_changed', function() {
            computeTotalDistance(directionsDisplay.getDirections());
        });
    }

    // Add a marker to the map and push to the array.
    function showSearchPoint(presult)
    {
    for (var i = 0; i < markerSearch.length; i++) {
                markerSearch[i].setMap(null);
        }
        markerSearch=[];
        var arr = presult.split(";");
        for (var j = 0; j < arr.length; j++) {
        arr[j]=arr[j].trim();
            //alert("j=" + j + "--" + arr[j]);
            if (arr[j] != null && arr[j] != " " && arr[j] != "") {
                var sdouble = arr[j].split(",");
                
                // var location = new google.maps.LatLng(parseFloat(sdouble[0].trim()), parseFloat(sdouble[1].trim()));
                 var location = new google.maps.LatLng(parseFloat(sdouble[0].trim()), parseFloat(sdouble[1].trim()));
//                 alert(sdouble.length);
                 var marker = new google.maps.Marker({
                    position: location,
                    map: null,
                    title: 'Tọa độ: '+location.toString()
                 });
                 markerSearch.push(marker);
                 //alert(markerSearch.length);
            }
        }
        for (var i = 0; i < markerSearch.length; i++) {
                markerSearch[i].setMap(map);
        }
    }
    function gotoSeachPoint(lat, lag)
    {
        var location = new google.maps.LatLng(lat,lag);
        map.setCenter(location);
    }
    function addMarker(location) {
        var marker = new google.maps.Marker({
        position: location,
        map: map,
        title: 'Tọa độ: '+location.toString()
        });
        markers.push(marker);
        latlang+=location.toString();
        //alert(latlang);
    }
    function addMarker1(po, img1, title) {
        var marker1 = new google.maps.Marker({
        position: po,
        map: map,
        icon: img1,
        title: title
        });
       markers.push(marker1);
       //alert(img1 + "__" + markers.length);
    }
        function addMarker2(arr2Add, po, img1, title, zindex) {
        var marker1 = new google.maps.Marker({
        position: po,
        map: map,
        icon: img1,
        title: title,
        zIndex:zindex
        });
        
       arr2Add.push(marker1);
        //alert(arr2Add.length);
        google.maps.event.addListener(marker1, 'click', showInfo);
       //alert(img1 + "__" + arr2Add.length);
    }
    function showInfo(event)
    {
    var infoWindow = new google.maps.InfoWindow();
    infoWindow.setContent(duAn_Info[this.zIndex]);
    infoWindow.setPosition(event.latLng);
    infoWindow.open(map);
        }
    // Sets the map on all markers in the array.
    function setAllMap(map) {
        for (var i = 0; i < markers.length; i++) {
        markers[i].setMap(map);
        }
    }

    // Removes the markers from the map, but keeps them in the array.
    function clearMarkers() {
        setAllMap(null);
    }
    function clearMarkers1(indexs) {
        var arr = indexs.split(";#");
        for (var i = 0; i < arr.length; i++) {
          markers[parseInt(arr[i])].setMap(null);
        }
        //setAllMap(map);
    }
    // Shows any markers currently in the array.
    function showMarkers() {
        setAllMap(map);
    }
    function showMarkers1(indexs) {
        var arr = indexs.split(";#");
        for (var i = 0; i < arr.length; i++) {
//        alert(arr[i]);
//        alert(markers.length);
        if(arr[i]!=null && arr[i]!=""){
         markers[parseInt(arr[i])].setMap(map);
        }
         
         // alert(arr[i]);
          //alert(markers.length);
        }
       
    }
    // Deletes all markers in the array by removing references to them.
    function deleteMarkers() {
        clearMarkers();
        markers = [];
    }

    google.maps.event.addDomListener(window, 'load', initialize);
    
</script>
<script>
    $(function () {
        $("#txtTimDuongA").autocomplete({
            source: availableTags
        });
        $("#txtTimDuongB").autocomplete({
            source: availableTags
        });
    });
</script>
<script>
    var directionsService = new google.maps.DirectionsService();
    function calcRoute(start, end) {
        //alert(pend);
        //var start = document.getElementById('txtStart').value; //new google.maps.LatLng(21.0140, 105.810);// Điểm bắt đầu
        //var end = document.getElementById('txtEnd').value; //new google.maps.LatLng(21.0200, 105.819);// Điểm kết thúc
        var waypts = []; //Các điểm phải đi qua từ điểm start đến điểm end (có thể có hoặc không)
        var request = {
            origin: start,
            destination: end,
            waypoints: waypts,
            optimizeWaypoints: true,
            travelMode: google.maps.TravelMode.DRIVING //WALKING, BICYCLING, TRANSIT
        };

        //Tìm và vẽ đường đi
        directionsService.route(request, function (response, status) {
            if (status == google.maps.DirectionsStatus.OK) {

                directionsDisplay.setMap(map);
                directionsDisplay.setDirections(response);

                //Hiển thị text mô tả đường đi trên thẻ div "directions_panel"
                var route = response.routes[0];
                var summaryPanel = document.getElementById('TimDuongResult');
                summaryPanel.innerHTML = '';
                // For each route, display summary information.
                for (var i = 0; i < route.legs.length; i++) {
                    var routeSegment = i + 1;
                    summaryPanel.innerHTML += '<b>Tuyến : ' + routeSegment + '</b><br>';
                    summaryPanel.innerHTML += route.legs[i].start_address + ' to ';
                    summaryPanel.innerHTML += route.legs[i].end_address + '<br>';
                    summaryPanel.innerHTML += route.legs[i].distance.text + '<br><br>';
                }
            }
        });
        computeTotalDistance(directionsDisplay.getDirections());

        // alert(start);
    }
    function computeTotalDistance(result) {
        //alert(result);
        var total = 0;
        var myroute = result.routes[0];
        for (var i = 0; i < myroute.legs.length; i++) {
            total += myroute.legs[i].distance.value;
        }
        //alert(total);
        total = total / 1000;
        var summaryPanel = document.getElementById('totalkm');
        summaryPanel.innerHTML = total + ' km';
    }

</script>
